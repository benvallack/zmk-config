/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>


&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
         combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
        
            combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };
        
                    combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };
        
                           combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };
        
        
           combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
        

        
    };

        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
		&kp Q       &kp W  &kp E  &kp R  &kp T 						&kp Y    &kp U  &kp I    &kp O    &kp P 
		&kp A       &kp S  &kp D  &kp F  &kp G 			        	&kp H    &kp J  &kp K    &kp L    &kp SEMI
		&mt LSFT Z  &kp X  &kp C  &kp V  &kp B				        &kp N    &kp M  &kp CMMA &kp DOT  &mt LSFT FSLH
          				          &mo 1  &mt LCTL BKSP		        &kp SPC  &mo 2
		>;
		};

       		left_layer {
		bindings = <
		&kp NUM_1       &kp NUM_2  &kp NUM_3  &kp NUM_4  &kp NUM_5	       &kp NUM_6  &kp NUM_7  &kp NUM_8  &kp NUM_9  &kp NUM_0 
		&kp GRAVE       &kp PLUS   &kp ASTRK  &kp LBRC   &kp RBRC 		   &kp LBKT   &kp RBKT   &kp LPAR   &kp RPAR   &kp APOS 
		&mt LSFT TILDE  &kp MINUS  &kp UNDER  &kp EQL    &kp DOT 	       &kp LT     &kp GT     &none      &kp BSLH   &kp FSLH 
					                          &none      &kp LGUI  		   &kp RGUI   &mo 3 
		>;
		};
		
		right_layer {
		bindings = <
		&none     &none     &none     &none     &none    			    &none  &kp PG_UP  &kp UP    &kp PG_DN  &none  
		&kp TAB   &none     &none     &kp LGUI  &kp RET 			    &none  &kp LEFT   &kp DOWN  &kp RIGHT  &kp DEL
		&kp LSFT  &none     &none     &none     &none    			    &none  &kp HOME   &none     &kp END    &kp BKSP
					                  &mo 4     &kp LCTL  				&none  &none 					
		>;
		};	
		
		tri_layer {
		bindings = <
		&kp BANG  &kp ATSN  &kp HASH  &kp DLLR  &kp PRCT    			&kp CRRT  &kp AMPS  &kp KMLT  &kp LPRN  &kp RPRN 
		&kp TAB   &none     &none     &none     &none 					&none	  &none     &none     &none     &none
		&kp ESC   &none     &none     &none     &none   				&none     &none     &none     &none     &kp LSFT    
					                  &none     &none  				    &none     &none 
		>;
		};	

        quad_layer {
		bindings = <
		&kp F1      &kp F2       &kp F3       &kp F4    &kp F5 			   &kp F6  &kp F7        &kp F8        &kp F9      &kp F10
		&kp F11     &kp F12      &none        &none     &none 			   &none   &kp C_VOL_UP  &kp C_VOL_DN  &kp F11     &kp F12 
		&mo 5       &none        &none        &none     &none              &none   &none         &none         &none       &none
					                          &none     &kp LCTL   		   &none   &none
		>;
		};	

		penta_layer {
		bindings = <
		&bt BT_PRV  &bt BT_NXT  &none       &none       &none 			   &none  &mwh SCROLL_UP  &mmv MOVE_UP    &mwh SCROLL_DOWN  &none
		&bt BT_CLR  &none       &mkp RCLK   &mkp LCLK   &none  		       &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT   &none 
		&none       &none       &none       &none       &none    		   &none  &none           &none           &none             &none   
					                        &none       &none   		   &none  &none
		>;
		};	
	};
};
